/*!
 App Connect Capacitor SQLite
 Version: 1.0.0
 (c) 2022 Wappler.io
 @build 2022-12-15 16:08:45
 */
dmx.sqlite=Capacitor.Plugins.CapacitorSQLite,dmx.Startup(new Promise(((t,e)=>{document.addEventListener("DOMContentLoaded",(()=>{if("web"==Capacitor.getPlatform()){if(!document.querySelector('script[src*="jeep-sqlite"]'))return e(Error("jeep-sqlite not detected"));const s=document.createElement("jeep-sqlite");s.setAttribute("autoSave","true"),document.body.append(s),console.log("Init jeep sqlite component"),customElements.whenDefined("jeep-sqlite").then((()=>{console.log("Init Web Store"),dmx.sqlite.initWebStore().then(t)}))}else console.log("Native platform"),t()}))})).then((()=>{if(console.log("Init databases",dmx.databases),dmx.databases&&Object.keys(dmx.databases).length)return Promise.all(Object.keys(dmx.databases).map((t=>{const{version:e,upgrade:s}=dmx.databases[t];return console.log(`Init database "${t}" version ${e}`),Promise.all(s.map((e=>(console.log(`Adding upgrade statement for ${t}:`,e),dmx.sqlite.addUpgradeStatement({database:t,upgrade:[e]}))))).then((()=>(console.log(`Connect to database ${t} version ${e}`),dmx.sqlite.createConnection({database:t,version:e})))).then((()=>(console.log(`Open database ${t}`),dmx.sqlite.open({database:t})))).then((()=>{console.log(`Database ${t} ready`)}))})))}))),dmx.ast2sql=function(t){const e=[],s=[];function n(t){return`"${t}"`}function a(e){return n(e.table.name||e.table||t.table.name||t.table)}function i(e){return(e.aggregate?e.aggregate+"(":"")+(e.distinct?"DISTINCT ":"")+(t.joins&&t.joins.length?a(e)+".":"")+n(e.column)+(e.aggregate?")":"")+(e.alias?" AS "+n(e.alias):"")}function o(t){return"FROM "+n(t.table.name||t.table)+(t.table.alias?` AS ${n(t.table.alias)}`:"")}function r(t){return t.wheres&&t.wheres.condition&&t.wheres.rules.length?`WHERE ${t.wheres.rules.map(l).join(` ${t.wheres.condition} `)}`:""}function l(t){if(!t.condition){let e="";return!t.operation&&t.operator&&(t.operation={equal:"=",not_equal:"<>",less:"<",less_or_equal:"<=",greater:">",greater_or_equal:">=",in:"IN",not_in:"NOT IN",between:"BETWEEN",not_between:"NOT BETWEEN",begins_with:"LIKE",not_begins_with:"NOT LIKE",contains:"LIKE",not_contains:"NOT LIKE",ends_with:"LIKE",not_ends_with:"NOT LIKE",is_empty:"=",is_not_empty:"<>",is_null:"IS NULL",is_not_null:"IS NOT NULL"}[t.operator]),"is_empty"!=t.operator&&"is_not_empty"!=t.operator||(t.value=""),/^IS\s+(NOT\s+)?NULL$/i.test(t.operation)?`${i(t.data||t)} ${t.operation}`:(e=/^(NOT\s+)?BETWEEN$/i.test(t.operation)?`${c(t.value[0])} AND ${c(t.value[1])}`:/^(NOT\s+)?IN$/i.test(t.operation)?Array.isArray(t.value)?`(${t.value.map(c).join(", ")})`:`(${t.value})`:null!=t.value?c(t.value):t.value,`${i(t.data||t)} ${t.operation} ${e}`)}return`(${t.rules.map(l).join(` ${t.condition} `)})`}function c(t,e){return null==t?"NULL":"object"==typeof t?(t.table?a(t)+".":"")+n(t.column):(s.push(t),"?")}switch(t.type.toUpperCase()){case"SELECT":e.push("SELECT"),e.push(function(t){return t.distinct?"DISTINCT":""}(t)),e.push(function(t){return Array.isArray(t.columns)&&t.columns.length?t.columns.map(i).join(", "):"*"}(t)),e.push(o(t)),e.push(function(t){return t.joins&&t.joins.length?t.joins.map((t=>(t.type?t.type+" ":"")+`JOIN ${n(t.table.name||t.table)}`+(t.table.alias||t.alias?` AS ${n(t.table.alias||t.alias)}`:"")+(t.clauses?` ON ${l(t.clauses)}`:""))).join(" "):""}(t)),e.push(r(t)),e.push(function(t){return t.groupBy&&t.groupBy.length?"GROUP BY "+t.groupBy.map((e=>(t.joins&&t.joins.length?a(i)+".":"")+n(e.column))).join(", "):""}(t)),e.push(function(t){return t.having?`HAVING ${l(t.having)}`:""}(t)),e.push(function(t){return t.order&&t.orders.length?"ORDER BY "+t.orders.map((e=>(t.joins&&t.joins.length?a(i)+".":"")+n(e.column)+(e.direction?` ${e.direction}`:""))).join(", "):""}(t)),e.push(function(t){return t.limit?`LIMIT ${t.limit}`:""}(t)),e.push(function(t){return null==t.offset?"":`OFFSET ${t.offset}`}(t));break;case"INSERT":e.push("INSERT INTO"),e.push(a(t)),e.push(function(t){return`(${t.values.map((t=>n(t.column))).join(", ")}) VALUES (${t.values.map((t=>c(t.value))).join(", ")})`}(t));break;case"UPDATE":e.push("UPDATE"),e.push(a(t)),e.push(function(t){return"SET "+t.values.map((t=>`${n(t.column)} = ${c(t.value)}`))}(t)),e.push(r(t));break;case"DELETE":e.push("DELETE"),e.push(o(t)),e.push(r(t))}return{statement:e.filter((t=>!!t)).join(" "),values:s}},dmx.Actions({"Capacitor.sqlite.connect":function(t){const e=this.parse(t);return dmx.sqlite.createConnection(e).then((()=>dmx.sqlite.open(e)))},"Capacitor.sqlite.getVersion":function(t){const e=this.parse(t);return dmx.sqlite.getVersion(e).then((t=>t.version))},"Capacitor.sqlite.isDatabase":function(t){const e=this.parse(t);return dmx.sqlite.isDatabase(e).then((t=>t.result))},"Capacitor.sqlite.isTableExists":function(t){const e=this.parse(t);return dmx.sqlite.isTableExists(e).then((t=>t.result))},"Capacitor.sqlite.deleteDatabase":function(){const t=this.parse(options);return dmx.sqlite.deleteDatabase(t)},"Capacitor.sqlite.copyFromAssets":function(t){const e=this.parse(t);return dmx.sqlite.copyFromAssets(e)},"Capacitor.sqlite.getFromHTTPRequest":function(t){const e=this.parse(t);return dmx.sqlite.getFromHTTPRequest(e)},"Capacitor.sqlite.getDatabaseList":function(){return dmx.sqlite.getDatabaseList().then((t=>t.values))},"Capacitor.sqlite.getTableList":function(t){const e=this.parse(t);return dmx.sqlite.getTableList(e).then((t=>t.values))},"Capacitor.sqlite.single":function(t){const e=this.parse(t);e.sql.type="select",e.sql.limit=1;const s=dmx.ast2sql(e.sql);return dmx.sqlite.query({database:e.connection,statement:s.statement,values:s.values}).then((({values:t})=>t["ios"==Capacitor.getPlatform()?1:0]))},"Capacitor.sqlite.select":function(t){const e=this.parse(t);e.sql.type="select";const s=dmx.ast2sql(e.sql);return dmx.sqlite.query({database:e.connection,statement:s.statement,values:s.values}).then((({values:t})=>t.slice("ios"==Capacitor.getPlatform()?1:0)))},"Capacitor.sqlite.insert":function(t){const e=this.parse(t);e.sql.type="insert";const s=dmx.ast2sql(e.sql);return dmx.sqlite.run({database:e.connection,statement:s.statement,values:s.values}).then((({changes:t})=>({affected:t.changes,identity:t.lastId})))},"Capacitor.sqlite.update":function(t){const e=this.parse(t);e.sql.type="update";const s=dmx.ast2sql(e.sql);return dmx.sqlite.run({database:e.connection,statement:s.statement,values:s.values}).then((({changes:t})=>({affected:t.changes,identity:t.lastId})))},"Capacitor.sqlite.delete":function(t){const e=this.parse(t);e.sql.type="delete";const s=dmx.ast2sql(e.sql);return dmx.sqlite.run({database:e.connection,statement:s.statement,values:s.values}).then((({changes:t})=>({affected:t.changes,identity:t.lastId})))},"Capacitor.sqlite.custom":function(t){const e=this.parse(t);return dmx.sqlite.query({database:e.connection,statement:e.sql.query,values:e.sql.params}).then((({values:t})=>t.slice("ios"==Capacitor.getPlatform()?1:0)))},"Capacitor.sqlite.query":function(t){const e=this.parse(t);return dmx.sqlite.query({database:e.connection,statement:e.sql.query,values:e.sql.params}).then((({values:t})=>t.slice("ios"==Capacitor.getPlatform()?1:0)))},"Capacitor.sqlite.exec":function(t){const e=this.parse(t);return dmx.sqlite.run({database:e.connection,statement:e.sql.query,values:e.sql.params}).then((({changes:t})=>({affected:t.changes,identity:t.lastId})))},"Capacitor.sqlite.close":function(t){return dmx.sqlite.closeConnection(this.parse(t))}}),dmx.Component("sqlite-select",{initialData:{data:[],state:{executing:!1},lastError:{message:""}},attributes:{database:{type:String},params:{type:Object,default:{}},noload:{type:Boolean,default:!1}},methods:{load:function(t){this.query(t)}},events:{start:Event,done:Event,error:Event,success:Event},$parseAttributes:function(t){dmx.BaseComponent.prototype.$parseAttributes.call(this,t),dmx.dom.getAttributes(t).forEach((t=>{"param"==t.name&&t.argument&&this.$addBinding(t.value,(e=>{this.props.params[t.argument]=e}))}))},render:function(t){try{this.ast=JSON.parse(t.textContent),this.ast.type="select",this.update({})}catch(t){console.error(t),this.set("lastError",{message:t.toString()})}},update:function(t,e){this.props.noload||dmx.equal(t.params,this.props.params)||requestAnimationFrame((()=>this.query()))},query:function(t={}){if(!this.ast)return;const e=dmx.extend(this.props.params,t),s=new dmx.DataScope(e,this),n=dmx.ast2sql(this.ast);this.dispatchEvent("start"),this.set("state",{executing:!0}),dmx.sqlite.query({database:this.props.database,statement:n.statement,values:n.values.map((t=>"string"==typeof t&&t.startsWith("{{")?dmx.parse(t,s):t))}).then((t=>{this._processResult(t)})).then((t=>{this.set("data",t),this.dispatchEvent("success"),this._done()})).catch((t=>this._done(t)))},_processResult:t=>t.values.slice("ios"==Capacitor.getPlatform()?1:0),_done:function(t){t&&(this.set("lastError",{message:t.toString()}),this.dispatchEvent("error")),this.set("state",{executing:!1}),this.dispatchEvent("done")}}),dmx.Component("sqlite-exec",{initialData:{affected:0,identity:null,state:{executing:!1},lastError:{message:""}},attributes:{database:{type:String}},methods:{run:function(){this.run()}},events:{start:Event,done:Event,error:Event,success:Event},render:function(t){try{this.ast=JSON.parse(t.textContent)}catch(t){console.error(t),this.set("lastError",{message:t.toString()})}},update:function(t,e){},run:function(){if(!this.ast)return;const t=dmx.ast2sql(this._processResult(this.ast));this.dispatchEvent("start"),this.set("state",{executing:!0}),dmx.sqlite.run({database:this.props.database,statement:t.statement,values:t.values.map((t=>"string"==typeof t&&t.startsWith("{{")?dmx.parse(t,this):t))}).then((t=>{this._processResult(t)})).then((t=>{this.set(t),this.dispatchEvent("success"),this._done()})).catch((t=>this._done(t)))},_processAst:t=>t,_processResult:t=>({affected:t.changes.changes,identity:t.changes.lastId}),_done:function(t){t&&(this.set("lastError",{message:t.toString()}),this.dispatchEvent("error")),this.set("state",{executing:!1}),this.dispatchEvent("done")}}),dmx.Component("sqlite-insert",{extends:"sqlite-exec",_processAst:t=>(t.type="insert",t)}),dmx.Component("sqlite-update",{extends:"sqlite-exec",_processAst:t=>(t.type="update",t)}),dmx.Component("sqlite-delete",{extends:"sqlite-exec",_processAst:t=>(t.type="delete",t)});
//# sourceMappingURL=../maps/dmxCapacitorSQLite.js.map
